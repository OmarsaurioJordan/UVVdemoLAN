<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_game</parentName>
  <maskName>d_base_m</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 2;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;

velocidad = 1;

var aux, rr;
var propvel = 10 / 365;

// mercurio
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 1;
rr = 36;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (87.6 * propvel);

// venus
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 2;
rr += 12;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (226.3 * propvel);

// tierra
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 3;
rr += 12;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (365.25 * propvel);
var tl = aux;

// luna
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = tl;
aux.tipo = 0;
tl = 8;
aux.radio = tl;
aux.rev_vel = (2 * pi * tl) / (27.32 * propvel);

// marte
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 4;
rr += 12;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (686.2 * propvel);

// jupiter
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 5;
rr += 16;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (4328.9 * propvel);

// saturno
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 6;
rr += 16;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (10752.9 * propvel);

// urano
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 7;
rr += 16;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (30663.65 * propvel);

// neptuno
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 8;
rr += 14;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (60152 * propvel);

// pluton
aux = instance_create(x, y, o_planeta);
aux.origen = id;
aux.centro = id;
aux.tipo = 9;
rr += 12;
aux.radio = rr;
aux.rev_vel = (2 * pi * rr) / (90410.5 * propvel);

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("planetario" + string(idweb) + ".ini") {
    ini_open("planetario" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    velocidad = real(ini_read_string("planetas", "velocidad", "1"));
    ini_close();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var buf = s_header(26, 7);
        buffer_write(buf, buffer_u16, idweb);
        buffer_write(buf, buffer_u32, fecha);
        buffer_write(buf, buffer_u8, round((velocidad / 10) * 255));
        s_udp_send(buf, "");
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("planetario" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
ini_write_string("planetas", "velocidad", string(velocidad));
ini_close();
s_ini_md5_close("planetario" + string(idweb) + ".ini");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_game, imge, x, y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

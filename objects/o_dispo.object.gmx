<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_visible</parentName>
  <maskName>d_base_u</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
origen = noone;
name = 255;
for (var i = 0; i &lt; 3; i++) {
    vecino[i] = noone; // id instancia vecino
    vecina[i] = 255; // name vecino
}
tipo = 0; // 0:led, 1:buzz, 2:mem, 3:delay, 4:rand, 5:sens, 6:bot, 7:osc,
          // 8:true, 9:false, 10:not, 11:or, 12:and, 13:xor, 14:cable
valor = 0; // segun tipo 0:color, 1:tono, 3:delay, 4:prob, 5:radio, 6:botKe, 7:frec

// funcionamiento
for (var i = 0; i &lt; 3; i++) {
    entrada[i] = 0; // para operadores, alta impedancia azar, reseteable
}
salida = 0; // para salidas, no se resetea
memoria = 0; // cambia dependiendo de la entrada
for (var d = 0; d &lt; 7; d++) {
    delay[d] = 0; // para retardos, cada reseteo inicia con alta impedancia, azar
}
tiempo = 0; // contador para oscila
ante_azar = 0;

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// buscar ids
var yop = id;
var lim = 0;
switch tipo {
    case 0: lim = 1; break;
    case 1: lim = 1; break;
    case 2: lim = 3; break;
    case 3: lim = 2; break;
    case 4: lim = 1; break;
    case 5: lim = 1; break;
    case 6: lim = 1; break;
    case 7: lim = 1; break;
    case 8: lim = 1; break;
    case 9: lim = 1; break;
    case 10: lim = 2; break;
    case 11: lim = 3; break;
    case 12: lim = 3; break;
    case 13: lim = 3; break;
    case 14: lim = 3; break;
}
for (var i = 0; i &lt; lim; i++) {
    vecino[i] = noone;
    with o_dispo {
        if id != yop and name == yop.vecina[i] {
            yop.vecino[i] = id;
            break;
        }
    }
}
origen.nodos = 0;
with o_dispo {
    if origen == yop.origen {
        yop.origen.nodos++;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tipo == 14 {
    if vecino[1] != noone and vecino[2] != noone {
        draw_sprite(d_circuito, 15, x, y);
    }
    else {
        draw_sprite(d_circuito, 14, x, y);
    }
}
else {
    draw_sprite(d_circuito, tipo, x, y);
}

draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text_transformed_colour(x, y - 40, string(name),
    0.8, 0.8, 0, c_black, c_black, c_black, c_black, 1);

if tipo == 0 and salida != 0 {
    draw_sprite(d_circuito, 16 + valor, x, y);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_especial</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 22;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;

preguntas = ds_list_create(); // str de preguntas, la primera es titulo
estudiantes = ds_list_create(); // idweb de quienes contestaron
respuestas = ds_list_create(); // listado de las respuestas, numero si-es
genero = 0; // 0:fem, 1:masc

for (var i = 0; i &lt; o_control.encuesta_max; i++) {
    ds_list_add(respuestas, 0);
    grafica[i] = 0;
}
s_respuestas(id);

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("encuesta" + string(idweb) + ".ini") {
    ini_open("encuesta" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    ds_list_read(preguntas, ini_read_string("encuesta", "preguntas", ""));
    ds_list_read(estudiantes, ini_read_string("encuesta", "estudiantes", ""));
    ds_list_read(respuestas, ini_read_string("encuesta", "respuestas", ""));
    genero = real(ini_read_string("encuesta", "genero", "0"));
    ini_close();
    s_respuestas(id);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var totp = ds_list_size(preguntas);
        var tote = ds_list_size(estudiantes);
        var buf = s_header(52, 10 + 2 * tote + 2 * o_control.encuesta_max);
        buffer_write(buf, buffer_u16, idweb);
        buffer_write(buf, buffer_u32, fecha);
        buffer_write(buf, buffer_u8, totp);
        for (var i = 0; i &lt; totp; i++) {
            buffer_write(buf, buffer_string, ds_list_find_value(preguntas, i));
        }
        buffer_write(buf, buffer_u8, tote);
        for (var i = 0; i &lt; tote; i++) {
            buffer_write(buf, buffer_u16, ds_list_find_value(estudiantes, i));
        }
        for (var i = 0; i &lt; o_control.encuesta_max; i++) {
            buffer_write(buf, buffer_u16, ds_list_find_value(respuestas, i));
        }
        buffer_write(buf, buffer_u16, genero);
        s_udp_send(buf, "");
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("encuesta" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
ini_write_string("encuesta", "preguntas", ds_list_write(preguntas));
ini_write_string("encuesta", "estudiantes", ds_list_write(estudiantes));
ini_write_string("encuesta", "respuestas", ds_list_write(respuestas));
ini_write_string("encuesta", "genero", string(genero));
ini_close();
s_ini_md5_close("encuesta" + string(idweb) + ".ini");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_core, imge, x, y);

draw_set_valign(fa_middle);
draw_set_halign(fa_center);
var est = ds_list_size(estudiantes);
draw_text_transformed_colour(x + 24, y - 28, string(est),
    0.8, 0.8, 0, c_black, c_black, c_black, c_black, 1);
if ds_list_size(preguntas) &gt; 1 {
    draw_sprite(d_cosas_core, 36, x, y);
}
var cmb = 0;
var tot = o_control.encuesta_max - 1;
if est != 0 {
    draw_sprite_ext(d_barranotas, 1, x - 39, y - 47,
        (genero / est) * 0.6, 1, 90, c_white, 1);
}
for (var i = 0; i &lt;= tot; i++) {
    draw_sprite_ext(d_barranotas, cmb, x - 31 + 65 * (i / tot), y - 47,
        grafica[i] * 0.6, 1, 90, c_white, 1);
    if cmb == 0 {
        cmb = 1;
    }
    else {
        cmb = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

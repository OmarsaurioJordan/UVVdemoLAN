<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_especial</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 6;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;
reloj_entrenotas = 0;
reloj_melodia = 0;

melodia = ds_list_create();
mute = 1; // 0:suena, 1:silencio

aguja = 0;

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("piano" + string(idweb) + ".ini") {
    ini_open("piano" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    mute = real(ini_read_string("config", "mute", "0"));
    var nts = ini_read_string("melodia", "notas", "");
    if nts != "" {
        ds_list_read(melodia, nts);
        aguja = 0;
    }
    ini_close();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var tot = ds_list_size(melodia);
        var buf = s_header(7, 9 + tot);
        buffer_write(buf, buffer_u16, idweb);
        buffer_write(buf, buffer_u32, fecha);
        buffer_write(buf, buffer_u8, mute);
        buffer_write(buf, buffer_u16, tot);
        for (var i = 0; i &lt; tot; i++) {
            buffer_write(buf, buffer_u8, ds_list_find_value(melodia, i));
        }
        s_udp_send(buf, "");
    }
    
    // sonar
    reloj_entrenotas = max(0, reloj_entrenotas - dlt);
    var tot = ds_list_size(melodia) - 1;
    if tot &gt;= 1 and mute == 0 {
        reloj_melodia -= dlt;
        if reloj_melodia &lt;= 0 {
            reloj_melodia = lerp(o_control.entrenotas + 0.05, 1,
                ds_list_find_value(melodia, 0) / 9);
            switch ds_list_find_value(melodia, aguja + 1) {
                case 1: s_piano_nota(id, a_nota_med_do, false); break;
                case 2: s_piano_nota(id, a_nota_med_re, false); break;
                case 3: s_piano_nota(id, a_nota_med_mi, false); break;
                case 4: s_piano_nota(id, a_nota_med_fa, false); break;
                case 5: s_piano_nota(id, a_nota_med_sol, false); break;
                case 6: s_piano_nota(id, a_nota_med_la, false); break;
                case 7: s_piano_nota(id, a_nota_med_si, false); break;
            }
            aguja++;
            if aguja &gt;= tot {
                aguja = 0;
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("piano" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
ini_write_string("config", "mute", string(mute));
if !ds_list_empty(melodia) {
    ini_write_string("melodia", "notas", ds_list_write(melodia));
}
else {
    ini_write_string("melodia", "notas", "");
}
ini_close();
s_ini_md5_close("piano" + string(idweb) + ".ini");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_core, imge, x, y);

var tot = ds_list_size(melodia) - 1;
if tot &gt;= 1 {
    for (var i = aguja + 1; i &lt; min(aguja + 1 + 12, tot); i++) {
        var nt = ds_list_find_value(melodia, i);
        if nt != 0 {
            nt--;
            draw_sprite_ext(d_piezas, 1, x - 28 + (i - (aguja + 1)) * 4.58,
                y - 65 - lerp(0, 14, nt / 6),
                1, 1, 0, merge_colour(c_blue, c_red, nt / 6), 1);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_game</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 3;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;

tipo = 0; // 0:seno, 1:triangular, 2:cuadrada, 3:dienteL, 4:dienteR, 5:azar
amplitud = 5;
frecuencia = 5;
desfase = 5;

reloj_signal = 0;
reloj_t = 0;
ant_amp = 35 / 2;

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("signal" + string(idweb) + ".ini") {
    ini_open("signal" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    tipo = real(ini_read_string("signal", "tipo", "0"));
    amplitud = real(ini_read_string("signal", "amplitud", "5"));
    frecuencia = real(ini_read_string("signal", "frecuencia", "5"));
    desfase = real(ini_read_string("signal", "desfase", "5"));
    ini_close();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var buf = s_header(255, 10);
        buffer_write(buf, buffer_u16, idweb);
        buffer_write(buf, buffer_u32, fecha);
        buffer_write(buf, buffer_u8, tipo);
        buffer_write(buf, buffer_u8, amplitud);
        buffer_write(buf, buffer_u8, frecuencia);
        buffer_write(buf, buffer_u8, desfase);
        s_udp_send(buf, "");
    }
    
    // crear particulas
    if visible {
        var frec = lerp(0.6, 2, frecuencia / 9);
        reloj_t += dlt;
        if reloj_t &gt;= frec {
            reloj_t -= frec;
        }
        reloj_signal -= dlt;
        if reloj_signal &lt;= 0 {
            reloj_signal = o_control.signal_reloj;
            // crear u obtener particula
            var aux = noone;
            var yop = id;
            with o_psig {
                if !activo {
                    activo = true;
                    x = yop.x + 32;
                    y = yop.y - 1;
                    orix = x;
                    aux = id;
                    break;
                }
            }
            if aux == noone {
                aux = instance_create(x + 32, y - 1, o_psig);
            }
            // depurar segun tipo de onda
            var des = (desfase / 10) * 70; // 9+1 para poder tener punto central
            var amp = (amplitud / 9) * 35;
            switch tipo {
                case 0: // seno
                    amp *= sin(2 * pi * (reloj_t / frec));
                    break;
                case 1: // triangular
                    var f = frec / 2;
                    if reloj_t &gt; f {
                        amp = lerp(amp, -amp, (reloj_t - f) / f);
                    }
                    else {
                        amp = lerp(-amp, amp, reloj_t / f);
                    }
                    break;
                case 2: // cuadrada
                    if reloj_t &gt; frec / 2 {
                        amp *= -1;
                    }
                    break;
                case 3: // dienteSube
                    amp = lerp(-amp, amp, reloj_t / frec);
                    break;
                case 4: // dienteBaja
                    amp = lerp(amp, -amp, reloj_t / frec);
                    break;
                case 5: // azar
                    if frecuencia == 0 {
                        amp = random_range(-amp, amp);
                    }
                    else {
                        var vent = amp * lerp(0.5, 0.1, (frecuencia - 1) / 8);
                        amp = clamp(ant_amp + random_range(-vent, vent), -amp, amp);
                    }
                    break;
            }
            aux.altura = 8 + clamp(des + amp, 0, 70);
            ant_amp = amp;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("signal" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
ini_write_string("signal", "tipo", string(tipo));
ini_write_string("signal", "amplitud", string(amplitud));
ini_write_string("signal", "frecuencia", string(frecuencia));
ini_write_string("signal", "desfase", string(desfase));
ini_close();
s_ini_md5_close("signal" + string(idweb) + ".ini");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_game, imge, x, y);

draw_set_valign(fa_middle);
draw_set_halign(fa_center);
var tit = "";
switch tipo {
    case 0: tit = "Seno"; break;
    case 1: tit = "Triangu."; break;
    case 2: tit = "Cuadrada"; break;
    case 3: tit = "Diente S"; break;
    case 4: tit = "Diente B"; break;
    case 5: tit = "Azar"; break;
}
draw_text_transformed_colour(x - 11, y - 73, tit,
    0.8, 0.8, 0, c_black, c_black, c_black, c_black, 1);
draw_text_transformed_colour(x - 24, y - 43, string(amplitud),
    0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
draw_text_transformed_colour(x - 7, y - 43, string(frecuencia),
    0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
draw_text_transformed_colour(x + 10, y - 43, string(desfase),
    0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

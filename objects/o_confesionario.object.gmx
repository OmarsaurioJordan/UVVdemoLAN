<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_especial</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 8;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;

textos = ds_list_create();
repeat 10 {
    ds_list_add(textos, "");
}
leido = 0; // en 1 para comenzar conteo futuro
futuro = 0; // fecha para mostrar nuevo texto

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("confesionario" + string(idweb) + ".ini") {
    ini_open("confesionario" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    leido = real(ini_read_string("config", "leido", "0"));
    futuro = real(ini_read_string("config", "futuro", "0"));
    for (var i = 0; i &lt; ds_list_size(textos); i++) {
        ds_list_replace(textos, i, ini_read_string("textos", "t" + string(i), ""));
    }
    ini_close();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var tot = 0;
        for (var i = 0; i &lt; ds_list_size(textos); i++) {
            tot += string_length(ds_list_find_value(textos, i));
        }
        var buf = s_header(18, 11 + tot);
        buffer_write(buf, buffer_u16, idweb);
        buffer_write(buf, buffer_u32, fecha);
        buffer_write(buf, buffer_u8, leido);
        buffer_write(buf, buffer_u32, futuro);
        for (var i = 0; i &lt; ds_list_size(textos); i++) {
            buffer_write(buf, buffer_string, ds_list_find_value(textos, i));
        }
        s_udp_send(buf, "");
    }
    
    // ver si hacer la confesion
    if random(1) &lt; 0.003 {
        if (leido == 1 or ds_list_find_value(textos, 0) == "") and
                futuro - s_current_time() &lt;= 0 {
            futuro = s_current_time() + 10;
            ds_list_replace(textos, 0, "");
            var tot = ds_list_size(textos);
            var freno = 0;
            var i;
            while true {
                i = irandom_range(1, tot - 1);
                ds_list_replace(textos, 0, ds_list_find_value(textos, i));
                ds_list_replace(textos, i, "");
                if ds_list_find_value(textos, 0) != "" {
                    leido = 0;
                    break;
                }
                freno++;
                if freno &gt; 10 * tot {
                    break;
                }
            }
                
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("confesionario" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
ini_write_string("config", "leido", string(leido));
ini_write_string("config", "futuro", string(futuro));
for (var i = 0; i &lt; ds_list_size(textos); i++) {
    ini_write_string("textos", "t" + string(i), ds_list_find_value(textos, i));
}
ini_close();
s_ini_md5_close("confesionario" + string(idweb) + ".ini");
ds_list_destroy(textos);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_core, imge, x, y);

if ds_list_find_value(textos, 0) != "" {
    draw_sprite(d_cosas_core, 30, x, y);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

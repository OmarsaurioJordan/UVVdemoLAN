<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_game</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 14;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;

turno = 0;
ultimo[0] = 255;
ultimo[1] = 0;
var tll = 6;
tablero = ds_grid_create(tll, tll);
var ca = o_control.celda_ajedrez;
var desf = 0;
var aux;
for (var h = 0; h &lt; tll; h++) {
    for (var w = 0; w &lt; tll; w++) {
        aux = instance_create(x - (tll / 2) * ca + w * ca + desf,
            y + 24 + h * ca * 0.75, o_fichamem);
        ds_grid_add(tablero, w, h, aux);
    }
    desf += ca * 0.2;
}
s_memoria_ini(id);

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("memoria" + string(idweb) + ".ini") {
    ini_open("memoria" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    turno = real(ini_read_string("config", "turno", "0"));
    ultimo[0] = real(ini_read_string("config", "u0", "255"));
    ultimo[1] = real(ini_read_string("config", "u1", "0"));
    var aux;
    var tll = ds_grid_width(tablero);
    for (var h = 0; h &lt; tll; h++) {
        for (var w = 0; w &lt; tll; w++) {
            aux = ds_grid_get(tablero, w, h);
            aux.tipo = real(ini_read_string("tablero", "t" + string(w) + "_" + string(h), "0"));
            aux.mostrado = real(ini_read_string("tablero", "m" + string(w) + "_" + string(h), "0"));
        }
    }
    ini_close();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var tll = ds_grid_width(tablero);
        var buf = s_header(43, 10 + tll * tll * 2);
        buffer_write(buf, buffer_u16, idweb);
        buffer_write(buf, buffer_u32, fecha);
        buffer_write(buf, buffer_u16, turno);
        buffer_write(buf, buffer_u8, ultimo[0]);
        buffer_write(buf, buffer_u8, ultimo[1]);
        var aux;
        for (var h = 0; h &lt; tll; h++) {
            for (var w = 0; w &lt; tll; w++) {
                aux = ds_grid_get(tablero, w, h);
                buffer_write(buf, buffer_u8, aux.tipo);
                buffer_write(buf, buffer_u8, ceil(aux.mostrado) + 1);
            }
        }
        s_udp_send(buf, "");
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("memoria" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
ini_write_string("config", "turno", string(turno));
ini_write_string("config", "u0", string(ultimo[0]));
ini_write_string("config", "u1", string(ultimo[1]));
var aux;
var tll = ds_grid_width(tablero);
for (var h = 0; h &lt; tll; h++) {
    for (var w = 0; w &lt; tll; w++) {
        aux = ds_grid_get(tablero, w, h);
        ini_write_string("tablero", "t" + string(w) + "_" + string(h), aux.tipo);
        ini_write_string("tablero", "m" + string(w) + "_" + string(h), aux.mostrado);
    }
}
ini_close();
s_ini_md5_close("memoria" + string(idweb) + ".ini");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_game, imge, x, y);

draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text_transformed_colour(x, y - 17, string(turno),
    0.8, 0.8, 0, c_black, c_black, c_black, c_black, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

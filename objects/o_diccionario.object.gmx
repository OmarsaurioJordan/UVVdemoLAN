<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_especial</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 9;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;

imagen = ds_grid_create(20, 30); // no sincronizable
ds_grid_clear(imagen, 0);
solo_aguja = false;
orden_mensaje = -1; // para edicion por el usuario
imagen_vacia = true;

titulos = ds_list_create();
fotos = ds_list_create();
infos = ds_list_create();
repeat 100 {
    ds_list_add(titulos, "");
    ds_list_add(fotos, "");
    ds_list_add(infos, "");
}
aguja = 0;

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("diccionario" + string(idweb) + ".ini") {
    ini_open("diccionario" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    aguja = real(ini_read_string("config", "aguja", "0"));
    for (var i = 0; i &lt; ds_list_size(titulos); i++) {
        ds_list_replace(titulos, i, ini_read_string("contenido", "t" + string(i), ""));
        ds_list_replace(fotos, i, ini_read_string("contenido", "f" + string(i), ""));
        ds_list_replace(infos, i, ini_read_string("contenido", "i" + string(i), ""));
    }
    ini_close();
    s_diccionario_aguja(id);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        if solo_aguja {
            solo_aguja = false;
            var buf = s_header(13, 7);
            buffer_write(buf, buffer_u16, idweb);
            buffer_write(buf, buffer_u32, fecha);
            buffer_write(buf, buffer_u8, aguja);
            s_udp_send(buf, "");
        }
        else {
            var ww = ds_grid_width(imagen);
            var hh = ds_grid_height(imagen);
            var lnz = ds_grid_create(ww, hh);
            var txt;
            var tot = 0;
            for (var i = 0; i &lt; ds_list_size(titulos); i++) {
                tot += string_length(ds_list_find_value(titulos, i));
                tot += string_length(ds_list_find_value(infos, i));
                tot++;
                txt = ds_list_find_value(fotos, i);
                if txt != "" {
                    tot += ww * hh;
                }
            }
            var buf = s_header(12, 7 + tot);
            buffer_write(buf, buffer_u16, idweb);
            buffer_write(buf, buffer_u32, fecha);
            buffer_write(buf, buffer_u8, aguja);
            for (var i = 0; i &lt; ds_list_size(titulos); i++) {
                buffer_write(buf, buffer_string, ds_list_find_value(titulos, i));
                buffer_write(buf, buffer_string, ds_list_find_value(infos, i));
                txt = ds_list_find_value(fotos, i);
                if txt == "" {
                    buffer_write(buf, buffer_u8, 0);
                }
                else {
                    buffer_write(buf, buffer_u8, 1);
                    ds_grid_read(lnz, txt);
                    for (var w = 0; w &lt; ww; w++) {
                        for (var h = 0; h &lt; hh; h++) {
                            buffer_write(buf, buffer_u8, ds_grid_get(lnz, w, h));
                        }
                    }
                }
            }
            ds_grid_destroy(lnz);
            s_udp_send(buf, "");
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("diccionario" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
ini_write_string("config", "aguja", string(aguja));
for (var i = 0; i &lt; ds_list_size(titulos); i++) {
    ini_write_string("contenido", "t" + string(i), ds_list_find_value(titulos, i));
    ini_write_string("contenido", "f" + string(i), ds_list_find_value(fotos, i));
    ini_write_string("contenido", "i" + string(i), ds_list_find_value(infos, i));
}
ini_close();
s_ini_md5_close("diccionario" + string(idweb) + ".ini");
ds_list_destroy(titulos);
ds_list_destroy(fotos);
ds_list_destroy(infos);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_core, imge, x, y);

draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text_transformed_colour(x + 28, y - 27, string(aguja),
    0.8, 0.8, 0, c_black, c_black, c_black, c_black, 1);
draw_text_transformed_colour(x - 10, y - 75, ds_list_find_value(titulos, aguja),
    0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
var txt = ds_list_find_value(infos, aguja);
if txt != "" {
    draw_text_ext_transformed_colour(x - 10, y - 43, txt,
        13, 85, 0.6, 0.6, 0, c_black, c_black, c_black, c_black, 1);
}
else if !imagen_vacia {
    var ww = ds_grid_width(imagen);
    var hh = ds_grid_height(imagen);
    var ccc;
    for (var w = 0; w &lt; ww; w++) {
        for (var h = 0; h &lt; hh; h++) {
            ccc = ds_grid_get(imagen, w, h);
            if ccc != 0 {
                ccc = make_colour_rgb(ccc, ccc, ccc);
                draw_sprite_ext(d_piezas, 0,
                    x + lerp(-33, 12, w / ww) + 2,
                    y + lerp(-69, -15, h / hh) + 2,
                    1, 1, 0, ccc, 1);
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

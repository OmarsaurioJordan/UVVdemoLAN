<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_visible</parentName>
  <maskName>d_base_r</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>origen = noone; // id o_puntaje
posx = x;
posy = y;
direcc = random(360);
velocity = 0;
reloj_toque = 0;
reloj_reset = 60;
s_anima_ini(id, 1, false, false);
s_audio(x, y, a_silvato, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_audio(x, y, a_silvato, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_permiso_pro() {
    s_anima_osc(id, 0, 0.69, 16 * (velocity / origen.patada));
    // buscar quien da la patada
    reloj_toque = max(0, reloj_toque - dlt);
    var otr = noone;
    if reloj_toque == 0 {
        var yop = id;
        var list = ds_list_create();
        with o_usuario {
            if place_meeting(posx, posy, yop) {
                ds_list_add(list, id);
            }
        }
        ds_list_shuffle(list);
        while !ds_list_empty(list) {
            otr = ds_list_find_value(list, 0);
            ds_list_delete(list, 0);
            if otr.objeto != 81 and otr.objeto != 82 {
                otr = noone;
            }
            else {
                break;
            }
        }
        ds_list_destroy(list);
    }
    // dar patada direccionadora
    if otr != noone {
        reloj_toque = 0.5;
        if otr.propietario {
            direcc = point_direction(posx, posy, mouse_x, mouse_y);
        }
        else {
            direcc = point_direction(posx, posy, otr.puntero_x, otr.puntero_y);
        }
        velocity = origen.patada;
    }
    // rebote con reja
    otr = instance_nearest(posx, posy, o_pnt_reja);
    if point_distance(posx, posy, otr.x, otr.y) &lt; o_control.radio_zona {
        var cch = instance_nearest(posx, posy, o_pnt_normal);
        var ac = point_direction(posx, posy, cch.x, cch.y);
        var ad = angle_difference(-direcc, ac);
        if ad &gt; 90 {
            ad -= 90;
        }
        else if ad &lt; -90 {
            ad += 90;
        }
        direcc = ac + ad;
        velocity = max(velocity, 30);
    }
    // movimiento
    velocity *= origen.friccion;
    var vv = velocity * dlt;
    posx += lengthdir_x(vv, direcc);
    posy += lengthdir_y(vv, direcc);
    // hacer gol
    otr = instance_place(posx, posy, o_cancha);
    if otr != noone {
        with origen {
            if otr.x &lt; x {
                puntos[0]++;
                if puntos[0] &gt;= puntos_futbol and reloj_juego == 0 {
                    enjuego = false;
                }
                else {
                    reloj_balon = 5;
                    if reloj_juego != 0 {
                        reloj_juego += 5;
                    }
                }
            }
            else {
                puntos[1]++;
                if puntos[1] &gt;= puntos_futbol and reloj_juego == 0 {
                    enjuego = false;
                }
                else {
                    reloj_balon = 5;
                    if reloj_juego != 0 {
                        reloj_juego += 5;
                    }
                }
            }
            fecha = s_current_time();
            reloj_delta = 2;
            reloj_sinc = 0;
        }
        instance_destroy();
        exit;
    }
    // sincronizacion posicion
    var vel = point_distance(x, y, posx, posy);
    if vel &gt; 100 {
        x = posx;
        y = posy;
        reloj_reset = 60;
    }
    else if vel &gt; 4 {
        vel *= dlt * 4;
        direcc = point_direction(x, y, posx, posy);
        x += lengthdir_x(vel, direcc);
        y += lengthdir_y(vel, direcc);
        reloj_reset = 60;
    }
    else {
        reloj_reset -= dlt;
        if reloj_reset &lt;= 0 {
            // finalizar juego
            origen.puntos[0] = 0;
            origen.puntos[1] = 0;
            origen.reloj_juego = 0;
            origen.reloj_balon = 0;
            origen.enjuego = false;
            origen.fecha = s_current_time() + 3;
            origen.reloj_delta = 2;
            origen.reloj_sinc = 0;
            instance_destroy();
            exit;
        }
    }
    while direcc &lt; 0 {
        direcc += 360;
    }
    while direcc &gt;= 360 {
        direcc -= 360;
    }
    depth = -y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var alt = 16 * (velocity / origen.patada);
draw_sprite(d_piezas, 20, x, y - (alt + anima[0]));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

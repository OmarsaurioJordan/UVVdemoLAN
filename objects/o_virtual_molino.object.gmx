<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fecha = 0;
reloj_sinc = -1;

opinador = ds_grid_create(o_control.cantidad_opiniones, 3);
ds_grid_clear(opinador, 0); // idweb, fecha, -1,0,1

audiolluvia = audio_play_sound(a_lluvia, 50, true);
audio_sound_gain(audiolluvia, 0, 0);

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("molino.ini") {
    ini_open("molino.ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    ds_grid_read(opinador, ini_read_string("opinion", "opinador", ""));
    ini_close();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var buf = s_header(49, 4 + 7 * o_control.cantidad_opiniones);
        buffer_write(buf, buffer_u32, fecha);
        for (var i = 0; i &lt; o_control.cantidad_opiniones; i++) {
            buffer_write(buf, buffer_u16, ds_grid_get(opinador, i, 0));
            buffer_write(buf, buffer_u32, ds_grid_get(opinador, i, 1));
            buffer_write(buf, buffer_u8, ds_grid_get(opinador, i, 2) + 1);
        }
        s_udp_send(buf, "");
    }
    
    // ver si caduco una opinion
    if random(1) &lt; 0.01 {
        var now = s_current_time() - o_control.duracion_opiniones;
        var f;
        for (var i = 0; i &lt; o_control.cantidad_opiniones; i++) {
            f = ds_grid_get(opinador, i, 1);
            if f != 0 and f &lt; now {
                ds_grid_set(opinador, i, 0, 0);
                ds_grid_set(opinador, i, 1, 0);
                ds_grid_set(opinador, i, 2, 0);
            }
        }
    }
    
    // llover
    var g = max(0, ds_grid_get_sum(o_virtual_molino.opinador, 0, 2,
        o_control.cantidad_opiniones - 1, 2)) / o_control.cantidad_opiniones;
    repeat irandom(g * 60) {
        s_gota();
    }
    if random(1) &lt; 0.1 {
        if g != 0 {
            var el = o_control.mipropio;
            var cc = instance_nearest(el.x, el.y, o_pnt_techo);
            if el.objeto == 162 or
                    point_distance(el.x, el.y, cc.x, cc.y) &lt; o_control.radio_zona {
                audio_sound_gain(audiolluvia, lerp(0.1, 0.7, g) / 2, 0);
            }
            else {
                audio_sound_gain(audiolluvia, lerp(0.1, 0.7, g), 0);
            }
        }
        else {
            audio_sound_gain(audiolluvia, 0, 0);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("molino.ini");
ini_write_string("config", "fecha", string(fecha));
ini_write_string("opinion", "opinador", ds_grid_write(opinador));
ini_close();
s_ini_md5_close("molino.ini");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

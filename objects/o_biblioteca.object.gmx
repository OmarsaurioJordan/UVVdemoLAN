<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_especial</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 0;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;
turno_sinc = 0;
file_sinc = 0;

archivos = ds_list_create();
for (var a = 0; a &lt; 9; a++) {
    ds_list_add(archivos, ds_list_create());
    fechas[a] = 0;
}

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("biblioteca" + string(idweb) + ".ini") {
    ini_open("biblioteca" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    var aux, sec, n;
    for (var a = 0; a &lt; ds_list_size(archivos); a++) {
        sec = "archivo" + string(a);
        if ini_section_exists(sec) {
            n = 0;
            fechas[a] = real(ini_read_string(sec, "fecha", "0"));
            aux = ds_list_find_value(archivos, a);
            ds_list_clear(aux);
            while ini_key_exists(sec, "p" + string(n)) {
                ds_list_add(aux, ini_read_string(sec, "p" + string(n), ""));
                n++;
            }
        }
    }
    ini_close();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var aux = ds_list_find_value(archivos, file_sinc);
        if ds_list_empty(aux) {
            var buf = s_header(14, 11);
            buffer_write(buf, buffer_u16, idweb);
            buffer_write(buf, buffer_u32, fecha);
            buffer_write(buf, buffer_u8, file_sinc);
            buffer_write(buf, buffer_u32, fechas[file_sinc]);
            s_udp_send(buf, "");
        }
        else if string_count("0", ds_list_find_value(aux, 2)) == 0 {
            var lefile = ds_list_find_value(aux, 3 + turno_sinc);
            var buf = s_header(14, 13 + string_length(lefile));
            buffer_write(buf, buffer_u16, idweb);
            buffer_write(buf, buffer_u32, fecha);
            buffer_write(buf, buffer_u8, file_sinc);
            buffer_write(buf, buffer_u32, fechas[file_sinc]);
            buffer_write(buf, buffer_string, ds_list_find_value(aux, 0)); // name file
            var tot = real(ds_list_find_value(aux, 1));
            buffer_write(buf, buffer_u8, tot); // total
            buffer_write(buf, buffer_u8, turno_sinc); // trozo actual
            buffer_write(buf, buffer_string, lefile);
            s_udp_send(buf, "");
            turno_sinc++;
            if turno_sinc &gt;= tot {
                turno_sinc = 0;
                file_sinc++;
                if file_sinc &gt;= ds_list_size(archivos) {
                    file_sinc = 0;
                }
            }
            else {
                reloj_sinc = 1;
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("biblioteca" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
var aux, sec;
for (var a = 0; a &lt; ds_list_size(archivos); a++) {
    sec = "archivo" + string(a);
    if ini_section_exists(sec) {
        ini_section_delete(sec);
    }
    ini_write_string(sec, "fecha", string(fechas[a]));
    aux = ds_list_find_value(archivos, a);
    if !ds_list_empty(aux) {
        for (var i = 0; i &lt; ds_list_size(aux); i++) {
            ini_write_string(sec, "p" + string(i), ds_list_find_value(aux, i));
        }
    }
}
ini_close();
s_ini_md5_close("biblioteca" + string(idweb) + ".ini");
for (var a = 0; a &lt; ds_list_size(archivos); a++) {
    ds_list_destroy(ds_list_find_value(archivos, a));
}
ds_list_destroy(archivos);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_core, imge, x, y);
for (var a = 0; a &lt; ds_list_size(archivos); a++) {
    if !ds_list_empty(ds_list_find_value(archivos, a)) {
        draw_sprite(d_cosas_core, 11 + a, x, y);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_voladorcito</parentName>
  <maskName>d_base_u</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = random(360);
mx = x;
my = y;
dormir = random(o_control.bicho_dormir); // segundos quietud
energia = o_control.bicho_alimento;
errar = random_range(0.2, 0.8) * o_control.bicho_dormir;

s_anima_ini(id, 2, false, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// errar

if !m_editor and o_evolutivo.activo {
    s_anima_osc(id, 0, 1.4, 6);
    s_anima_osc(id, 1, 0.2, 9);
    
    // reloj de dormir y ver si activo
    var activo = true;
    dormir += dlt;
    if dormir &gt;= o_control.bicho_dormir {
        dormir = 0;
        errar = random_range(0.2, 0.8) * o_control.bicho_dormir;
    }
    if dormir &gt; errar {
        mx = x;
        my = y;
        activo = false;
    }
    
    // buscar lugar al azar
    if activo and point_distance(x, y, mx, my) &lt; 24 {
        var neabos;
        var fren = 0;
        do {
            mx = x + random_range(-view_wview[0], view_wview[0]);
            my = y + random_range(-view_hview[0], view_hview[0]);
            neabos = instance_nearest(mx, my, o_pnt_lago2);
            fren++;
        }
        until (point_distance(mx, my, neabos.x, neabos.y) &lt; o_control.radio_zona and
            !place_meeting(mx, my, o_bloque)) or fren &gt;= 100;
    }
    
    // moverse hacia lugar
    if activo {
        direction = point_direction(x, y, mx, my);
        var vvv = o_control.vel_alimento * dlt;
        x += lengthdir_x(vvv, direction);
        y += lengthdir_y(vvv, direction);
    }
    
    // detectar colisiones y resolver
    var otr = instance_place(x, y, o_bloque);
    if otr == noone {
        otr = instance_place(x, y, o_movil);
    }
    if otr != noone {
        direction = point_direction(otr.x, otr.y, x, y);
        var vvv = max(o_control.vel_alimento, o_control.velocidad) * dlt * 1.25;
        x += lengthdir_x(vvv, direction);
        y += lengthdir_y(vvv, direction);
    }
    else {
        otr = instance_place(x, y, o_voladorcito);
        if otr != noone {
            direction = point_direction(otr.x, otr.y, x, y);
            var vvv = o_control.vel_alimento * dlt * 0.5;
            x += lengthdir_x(vvv, direction);
            y += lengthdir_y(vvv, direction);
            otr.x += lengthdir_x(vvv, -direction);
            otr.y += lengthdir_y(vvv, -direction);
        }
    }
    
    // prevenir salirse del mundo
    x = clamp(x, 0, room_width);
    y = clamp(y, 0, room_height);
    depth = -y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ccc = c_lime;
var alt = 58 + anima[0];
// alas
draw_sprite_ext(d_bicho, 22,
    x, y - alt, 1, 1, anima[1], ccc, 1);
draw_sprite_ext(d_bicho, 22,
    x, y - alt, -1, 1, -anima[1], ccc, 1);
// cuerpo
draw_sprite_ext(d_bicho, 21,
    x, y - alt, 1, 1, 0, ccc, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_game</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 24;
idweb = s_idweb_loco(x, y);
fecha = 0;

cercano_A = noone;
cercano_B = noone;
pasion = random(1); // velocidad animacion
gemidos = noone;

s_anima_ini(id, 1, true, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// buscar parejas
var tramo = lerp(0.2, 0.6, pasion);
s_anima_paso(id, tramo, 3);
s_anima_osc(id, 0, tramo * 3, 3);
if cercano_A != noone and random(1) &lt; 0.5{
    if point_distance(x, y, cercano_A.x, cercano_A.y) &gt; o_control.cerca_especial / 2 or
            point_distance(x, y, cercano_B.x, cercano_B.y) &gt; o_control.cerca_especial / 2 {
        cercano_A = noone;
        cercano_B = noone;
        exit;
    }
}
if !m_editor and random(1) &lt; 0.01 {
    pasion = random(1);
    cercano_B = noone;
    cercano_A = instance_nearest(x, y, o_usuario);
    if point_distance(x, y, cercano_A.x, cercano_A.y) &gt; o_control.cerca_especial / 2 {
        cercano_A = noone;
        exit;
    }
    var yop = id;
    var ok;
    if cercano_A.estaonline {
        for (var c = 0; c &lt; o_control.total_contactos; c++) {
            if cercano_A.amigi[c] == m_cont_love and cercano_A.amigo[c] != 0 {
                with o_usuario {
                    if id != yop.cercano_A and idweb == yop.cercano_A.amigo[c] {
                        yop.cercano_B = id;
                        break;
                    }
                }
                if cercano_B != noone {
                    if cercano_B.estaonline {
                        ok = false;
                        for (var h = 0; h &lt; o_control.total_contactos; h++) {
                            if cercano_B.amigi[c] == m_cont_love and cercano_B.amigo[c] == cercano_A.idweb {
                                if point_distance(x, y, cercano_B.x, cercano_B.y) &lt; o_control.cerca_especial / 2 {
                                    ok = true;
                                    break;
                                }
                            }
                        }
                        if ok {
                            // poner virus
                            if cercano_A.salud &gt; 1 and cercano_B.salud == 0 {
                                cercano_B.salud = s_current_time();
                                s_infectar_udp(cercano_B.idweb, 0);
                            }
                            else if cercano_B.salud &gt; 1 and cercano_A.salud == 0 {
                                cercano_A.salud = s_current_time();
                                s_infectar_udp(cercano_A.idweb, 0);
                            }
                        }
                        else {
                            cercano_B = noone;
                        }
                    }
                    else {
                        cercano_B = noone;
                    }
                }
            }
        }
        if cercano_B == noone {
            cercano_A = noone;
        }
    }
    else {
        cercano_A = noone;
    }
}
// sonido
if cercano_A != noone {
    if gemidos != noone {
        if audio_is_playing(gemidos) {
            exit;
        }
        else {
            gemidos = noone;
        }
    }
    gemidos = audio_play_sound_at(a_sex, x, y, 64, 48, view_wview[0] * 0.4, 1, false, 19);
    audio_sound_gain(gemidos, 0.8, 0);
    audio_sound_pitch(gemidos, lerp(1.2, 0.8, pasion));
}
else {
    if gemidos != noone {
        if audio_is_playing(gemidos) {
            audio_stop_sound(gemidos);
        }
        gemidos = noone;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if cercano_A == noone {
    draw_sprite(d_game, imge, x, y);
}
else {
    var a = cercano_A;
    var b = cercano_B;
    if b.genero == 1 and a.genero == 0 {
        a = cercano_B;
        b = cercano_A;
    }
    draw_sprite(d_cosas_game, 39 + paso, x, y);
    s_draw_cabeza(a, x - 13 + anima[0] * 0.69, y - 5 + anima[0]);
    s_draw_cabeza(b, x + 15 + anima[0], y + 11 - anima[0] * 0.69);
    draw_sprite(d_cosas_game, 36 + paso, x, y);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_game</parentName>
  <maskName>d_base_e</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
imge = 10;
idweb = s_idweb_loco(x, y);
fecha = 0;
reloj_sinc = -1;

pregunta = "";
for (var i = 0; i &lt; 4; i++) {
    respuesta[i] = "";
}
verdadera = 0;
nivel = 1;
puntos[0] = 0;
puntos[1] = 0;
s_calculadora(id, true, false, 0);

viej_pregunta = "";

alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if s_ini_md5_open("calculadora" + string(idweb) + ".ini") {
    ini_open("calculadora" + string(idweb) + ".ini");
    fecha = real(ini_read_string("config", "fecha", "0"));
    pregunta = ini_read_string("pregunta", "pregunta", "");
    for (var i = 0; i &lt; 4; i++) {
        respuesta[i] = ini_read_string("pregunta", "r" + string(i), "");
    }
    verdadera = real(ini_read_string("pregunta", "verdadera", "0"));
    nivel = real(ini_read_string("pregunta", "nivel", "0"));
    puntos[0] = real(ini_read_string("pregunta", "p0", "0"));
    puntos[1] = real(ini_read_string("pregunta", "p1", "0"));
    ini_close();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sincronia

if !m_editor {
    if s_ciclo_actualizador(id) {
        var buf = s_header(39, 10 + string_length(pregunta));
        buffer_write(buf, buffer_u16, idweb);
        buffer_write(buf, buffer_u32, fecha);
        buffer_write(buf, buffer_string, pregunta);
        for (var i = 0; i &lt; 4; i++) {
            buffer_write(buf, buffer_string, respuesta[i]);
        }
        buffer_write(buf, buffer_u8, verdadera);
        buffer_write(buf, buffer_u8, nivel);
        buffer_write(buf, buffer_u8, puntos[0]);
        buffer_write(buf, buffer_u8, puntos[1]);
        s_udp_send(buf, "");
    }
    
    // juego solo
    if respuesta[0] != "+" {
        var iz = collision_point(x - 46, y, o_usuario, false, false);
        var de = collision_point(x + 46, y, o_usuario, false, false);
        if de xor iz {
            if s_current_time() - fecha &gt; 1 + o_control.calculadora_solo {
                if de != noone {
                    s_calculadora(id, false, true, -1);
                    fecha = s_current_time();
                    reloj_sinc = 0;
                }
                else {
                    s_calculadora(id, false, false, -1);
                    fecha = s_current_time();
                    reloj_sinc = 0;
                }
            }
        }
    }
    
    if pregunta != viej_pregunta {
        var asd = audio_play_sound_at(a_calculadora, x, y, 64, 48,
            view_wview[0] * 0.5, 1, false, 2);
        audio_sound_gain(asd, 0.6, 0);
    }
    viej_pregunta = pregunta;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("calculadora" + string(idweb) + ".ini");
ini_write_string("config", "idweb", string(idweb)); // inutil
ini_write_string("config", "fecha", string(fecha));
ini_write_string("pregunta", "pregunta", pregunta);
for (var i = 0; i &lt; 4; i++) {
    ini_write_string("pregunta", "r" + string(i), respuesta[i]);
}
ini_write_string("pregunta", "verdadera", string(verdadera));
ini_write_string("pregunta", "nivel", string(nivel));
ini_write_string("pregunta", "p0", string(puntos[0]));
ini_write_string("pregunta", "p1", string(puntos[1]));
ini_close();
s_ini_md5_close("calculadora" + string(idweb) + ".ini");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>o_calculadora</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_game, imge, x, y);

draw_set_valign(fa_middle);
draw_set_halign(fa_center);
if s_current_time() - fecha &gt; 1 {
    draw_text_transformed_colour(x - 4, y - 73, pregunta,
        0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_transformed_colour(x - 19, y - 44, respuesta[0],
        0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_transformed_colour(x + 17, y - 44, respuesta[1],
        0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_transformed_colour(x - 18, y - 21, respuesta[2],
        0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_transformed_colour(x + 17, y - 20, respuesta[3],
        0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
}
else {
    draw_text_transformed_colour(x - 4, y - 73, "???",
        0.7, 0.7, 0, c_black, c_black, c_black, c_black, 1);
}

draw_sprite(d_cosas_game, 31, x, y - 60 * (puntos[0] / o_control.calculadora_puntos));
draw_sprite(d_cosas_game, 32, x, y - 60 * (puntos[1] / o_control.calculadora_puntos));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
